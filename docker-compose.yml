version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: parlour-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: parlour_dashboard
    volumes:
      - mongodb_data:/data/db
      - ./backend-parlour-api/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - parlour-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://admin:password123@localhost:27017/admin --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend API
  backend:
    build:
      context: ./backend-parlour-api
      dockerfile: Dockerfile
    container_name: parlour-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/parlour_dashboard?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-for-parlour-dashboard-2024
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:3000
      RATE_LIMIT_MAX_REQUESTS: 100
      RATE_LIMIT_WINDOW_MS: 900000
      SOCKET_IO_CORS_ORIGIN: http://localhost:3000
      DEFAULT_SUPER_ADMIN_EMAIL: admin@parlour.com
      DEFAULT_SUPER_ADMIN_PASSWORD: Admin@123
      DEFAULT_ADMIN_EMAIL: manager@parlour.com
      DEFAULT_ADMIN_PASSWORD: Manager@123
      BCRYPT_SALT_ROUNDS: 12
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - parlour-network
    volumes:
      - ./backend-parlour-api:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend-parlour-dashboard
      dockerfile: Dockerfile
    container_name: parlour-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:5000/api
      NEXT_PUBLIC_SOCKET_URL: http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - parlour-network
    volumes:
      - ./frontend-parlour-dashboard:/app
      - /app/node_modules
      - /app/.next

  # MongoDB Admin Interface (Optional)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: parlour-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - parlour-network

volumes:
  mongodb_data:
    driver: local

networks:
  parlour-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16 