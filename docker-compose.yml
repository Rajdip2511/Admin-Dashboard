version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: parlour-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express:1.0.0
    container_name: parlour-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      mongodb:
        condition: service_healthy

  backend:
    build:
      context: ./backend-parlour-api
      dockerfile: Dockerfile
    container_name: parlour-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/parlour_dashboard
      - CORS_ORIGIN=http://localhost:3000
      - JWT_SECRET=your-super-secret-jwt-key-for-parlour-dashboard-2024
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./backend-parlour-api:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ./frontend-parlour-dashboard
      dockerfile: Dockerfile
    container_name: parlour-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend-parlour-dashboard:/app
      - /app/node_modules

volumes:
  mongo-data: 